// This autogenerated skeleton file illustrates how to build a server.
// You should copy it to another filename to avoid overwriting it.

#include "YARNTetrischedService.h"
#include <thrift/protocol/TBinaryProtocol.h>
#include <thrift/transport/TSocket.h>
#include <thrift/transport/TTransportUtils.h>

using namespace ::apache::thrift;
using namespace ::apache::thrift::protocol;
using namespace ::apache::thrift::transport;

using boost::shared_ptr;

using namespace std;
using namespace alsched;

int main(int argc, char **argv)
{
    int yarnport = 9090;
    shared_ptr<TTransport> socket(new TSocket("localhost", yarnport));
    shared_ptr<TTransport> transport(new TBufferedTransport(socket));
    shared_ptr<TProtocol> protocol(new TBinaryProtocol(transport));
    YARNTetrischedServiceClient client(protocol);

    try {
        transport->open();

        set<int32_t> machines;
        machines.insert(8);
        machines.insert(1);
        machines.insert(10);
        client.AllocResources(11, machines);

        transport->close();
    } catch (TException& tx) {
        printf("ERROR: %s\n", tx.what());
    }
    return 0;
}
